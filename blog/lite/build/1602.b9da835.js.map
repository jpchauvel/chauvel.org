{"version":3,"file":"1602.b9da835.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/color/node_modules/color-name/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/color/node_modules/color-string/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/color/node_modules/color-convert/conversions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/color/node_modules/color-convert/route.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/color/node_modules/color-convert/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/color/index.js"],"sourcesContent":["export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","import colorNames from 'color-name';\n\nconst reverseNames = Object.create(null);\n\n// Create a list of reverse color names\nfor (const name in colorNames) {\n\tif (Object.hasOwn(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nconst cs = {\n\tto: {},\n\tget: {},\n};\n\ncs.get = function (string) {\n\tconst prefix = string.slice(0, 3).toLowerCase();\n\tlet value;\n\tlet model;\n\tswitch (prefix) {\n\t\tcase 'hsl': {\n\t\t\tvalue = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'hwb': {\n\t\t\tvalue = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault: {\n\t\t\tvalue = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!value) {\n\t\treturn null;\n\t}\n\n\treturn {model, value};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst abbr = /^#([a-f\\d]{3,4})$/i;\n\tconst hex = /^#([a-f\\d]{6})([a-f\\d]{2})?$/i;\n\tconst rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst per = /^rgba?\\(\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?[\\d.]+)(%?)\\s*)?\\)$/;\n\tconst keyword = /^(\\w+)$/;\n\n\tlet rgb = [0, 0, 0, 1];\n\tlet match;\n\tlet i;\n\tlet hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tconst i2 = i * 2;\n\t\t\trgb[i] = Number.parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Number.parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Number.parseInt(match[i + 1], 10);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(Number.parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = match[5] ? Number.parseFloat(match[4]) * 0.01 : Number.parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!Object.hasOwn(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d.]+)%\\s*,?\\s*([+-]?[\\d.]+)%\\s*(?:[,|/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hsl);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst s = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst l = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tconst hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tconst match = string.match(hwb);\n\n\tif (match) {\n\t\tconst alpha = Number.parseFloat(match[4]);\n\t\tconst h = ((Number.parseFloat(match[1]) % 360) + 360) % 360;\n\t\tconst w = clamp(Number.parseFloat(match[2]), 0, 100);\n\t\tconst b = clamp(Number.parseFloat(match[3]), 0, 100);\n\t\tconst a = clamp(Number.isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function (...rgba) {\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function (...rgba) {\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function (...rgba) {\n\tconst r = Math.round(rgba[0] / 255 * 100);\n\tconst g = Math.round(rgba[1] / 255 * 100);\n\tconst b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function (...hsla) {\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// Hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function (...hwba) {\n\tlet a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (...rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// Helpers\nfunction clamp(number_, min, max) {\n\treturn Math.min(Math.max(min, number_), max);\n}\n\nfunction hexDouble(number_) {\n\tconst string_ = Math.round(number_).toString(16).toUpperCase();\n\treturn (string_.length < 2) ? '0' + string_ : string_;\n}\n\nexport default cs;\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nimport cssKeywords from 'color-name';\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\toklab: {channels: 3, labels: ['okl', 'oka', 'okb']},\n\tlch: {channels: 3, labels: 'lch'},\n\toklch: {channels: 3, labels: ['okl', 'okc', 'okh']},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']},\n};\n\nexport default convert;\n\n// LAB f(t) constant\nconst LAB_FT = (6 / 29) ** 3;\n\n// SRGB non-linear transform functions\nfunction srgbNonlinearTransform(c) {\n\tconst cc = c > 0.003_130_8\n\t\t? ((1.055 * (c ** (1 / 2.4))) - 0.055)\n\t\t: c * 12.92;\n\treturn Math.min(Math.max(0, cc), 1);\n}\n\nfunction srgbNonlinearTransformInv(c) {\n\treturn c > 0.040_45 ? (((c + 0.055) / 1.055) ** 2.4) : (c / 12.92);\n}\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tswitch (max) {\n\t\tcase min: {\n\t\t\th = 0;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase r: {\n\t\t\th = (g - b) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase g: {\n\t\t\th = 2 + (b - r) / delta;\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase b: {\n\t\t\th = 4 + (r - g) / delta;\n\n\t\t\tbreak;\n\t\t}\n\t// No default\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tswitch (v) {\n\t\t\tcase r: {\n\t\t\t\th = bdif - gdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase g: {\n\t\t\t\th = (1 / 3) + rdif - bdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase b: {\n\t\t\t\th = (2 / 3) + gdif - rdif;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t// No default\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100,\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.oklab = function (rgb) {\n\t// Assume sRGB\n\tconst r = srgbNonlinearTransformInv(rgb[0] / 255);\n\tconst g = srgbNonlinearTransformInv(rgb[1] / 255);\n\tconst b = srgbNonlinearTransformInv(rgb[2] / 255);\n\n\tconst lp = Math.cbrt(0.412_221_470_8 * r + 0.536_332_536_3 * g + 0.051_445_992_9 * b);\n\tconst mp = Math.cbrt(0.211_903_498_2 * r + 0.680_699_545_1 * g + 0.107_396_956_6 * b);\n\tconst sp = Math.cbrt(0.088_302_461_9 * r + 0.281_718_837_6 * g + 0.629_978_700_5 * b);\n\n\tconst l = 0.210_454_255_3 * lp + 0.793_617_785 * mp - 0.004_072_046_8 * sp;\n\tconst aa = 1.977_998_495_1 * lp - 2.428_592_205 * mp + 0.450_593_709_9 * sp;\n\tconst bb = 0.025_904_037_1 * lp + 0.782_771_766_2 * mp - 0.808_675_766 * sp;\n\n\treturn [l * 100, aa * 100, bb * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Number.POSITIVE_INFINITY;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\t// Assume sRGB\n\tconst r = srgbNonlinearTransformInv(rgb[0] / 255);\n\tconst g = srgbNonlinearTransformInv(rgb[1] / 255);\n\tconst b = srgbNonlinearTransformInv(rgb[2] / 255);\n\n\tconst x = (r * 0.412_456_4) + (g * 0.357_576_1) + (b * 0.180_437_5);\n\tconst y = (r * 0.212_672_9) + (g * 0.715_152_2) + (b * 0.072_175);\n\tconst z = (r * 0.019_333_9) + (g * 0.119_192) + (b * 0.950_304_1);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t3;\n\tlet value;\n\n\tif (s === 0) {\n\t\tvalue = l * 255;\n\t\treturn [value, value, value];\n\t}\n\n\tconst t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tvalue = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tvalue = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tvalue = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tvalue = t1;\n\t\t}\n\n\t\trgb[i] = value * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0: {\n\t\t\treturn [v, t, p];\n\t\t}\n\n\t\tcase 1: {\n\t\t\treturn [q, v, p];\n\t\t}\n\n\t\tcase 2: {\n\t\t\treturn [p, v, t];\n\t\t}\n\n\t\tcase 3: {\n\t\t\treturn [p, q, v];\n\t\t}\n\n\t\tcase 4: {\n\t\t\treturn [t, p, v];\n\t\t}\n\n\t\tcase 5: {\n\t\t\treturn [v, p, q];\n\t\t}\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\t// eslint-disable-next-line no-bitwise\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces, default-case-last */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: { r = v;  g = n;  b = wh; break;\n\t\t}\n\n\t\tcase 1: { r = n;  g = v;  b = wh; break;\n\t\t}\n\n\t\tcase 2: { r = wh; g = v;  b = n; break;\n\t\t}\n\n\t\tcase 3: { r = wh; g = n;  b = v; break;\n\t\t}\n\n\t\tcase 4: { r = n;  g = wh; b = v; break;\n\t\t}\n\n\t\tcase 5: { r = v;  g = wh; b = n; break;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces, default-case-last */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.240_454_2) + (y * -1.537_138_5) + (z * -0.498_531_4);\n\tg = (x * -0.969_266) + (y * 1.876_010_8) + (z * 0.041_556);\n\tb = (x * 0.055_643_4) + (y * -0.204_025_9) + (z * 1.057_225_2);\n\n\t// Assume sRGB\n\tr = srgbNonlinearTransform(r);\n\tg = srgbNonlinearTransform(g);\n\tb = srgbNonlinearTransform(b);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > LAB_FT ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > LAB_FT ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > LAB_FT ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.xyz.oklab = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\n\tconst lp = Math.cbrt(0.818_933_010_1 * x + 0.361_866_742_4 * y - 0.128_859_713_7 * z);\n\tconst mp = Math.cbrt(0.032_984_543_6 * x + 0.929_311_871_5 * y + 0.036_145_638_7 * z);\n\tconst sp = Math.cbrt(0.048_200_301_8 * x + 0.264_366_269_1 * y + 0.633_851_707 * z);\n\n\tconst l = 0.210_454_255_3 * lp + 0.793_617_785 * mp - 0.004_072_046_8 * sp;\n\tconst a = 1.977_998_495_1 * lp - 2.428_592_205 * mp + 0.450_593_709_9 * sp;\n\tconst b = 0.025_904_037_1 * lp + 0.782_771_766_2 * mp - 0.808_675_766 * sp;\n\n\treturn [l * 100, a * 100, b * 100];\n};\n\nconvert.oklab.oklch = function (oklab) {\n\treturn convert.lab.lch(oklab);\n};\n\nconvert.oklab.xyz = function (oklab) {\n\tconst ll = oklab[0] / 100;\n\tconst a = oklab[1] / 100;\n\tconst b = oklab[2] / 100;\n\n\tconst l = (0.999_999_998 * ll + 0.396_337_792 * a + 0.215_803_758 * b) ** 3;\n\tconst m = (1.000_000_008 * ll - 0.105_561_342 * a - 0.063_854_175 * b) ** 3;\n\tconst s = (1.000_000_055 * ll - 0.089_484_182 * a - 1.291_485_538 * b) ** 3;\n\n\tconst x = 1.227_013_851 * l - 0.557_799_98 * m + 0.281_256_149 * s;\n\tconst y = -0.040_580_178 * l + 1.112_256_87 * m - 0.071_676_679 * s;\n\tconst z = -0.076_381_285 * l - 0.421_481_978 * m + 1.586_163_22 * s;\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.oklab.rgb = function (oklab) {\n\tconst ll = oklab[0] / 100;\n\tconst aa = oklab[1] / 100;\n\tconst bb = oklab[2] / 100;\n\n\tconst l = (ll + 0.396_337_777_4 * aa + 0.215_803_757_3 * bb) ** 3;\n\tconst m = (ll - 0.105_561_345_8 * aa - 0.063_854_172_8 * bb) ** 3;\n\tconst s = (ll - 0.089_484_177_5 * aa - 1.291_485_548 * bb) ** 3;\n\n\t// Assume sRGB\n\tconst r = srgbNonlinearTransform(4.076_741_662_1 * l - 3.307_711_591_3 * m + 0.230_969_929_2 * s);\n\tconst g = srgbNonlinearTransform(-1.268_438_004_6 * l + 2.609_757_401_1 * m - 0.341_319_396_5 * s);\n\tconst b = srgbNonlinearTransform(-0.004_196_086_3 * l - 0.703_418_614_7 * m + 1.707_614_701 * s);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.oklch.oklab = function (oklch) {\n\treturn convert.lch.lab(oklch);\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > LAB_FT ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > LAB_FT ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > LAB_FT ? z2 : (z - 16 / 116) / 7.787;\n\n\t// Illuminant D65 XYZ Tristrimulus Values\n\t// https://en.wikipedia.org/wiki/CIE_1931_color_space\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t/* eslint-disable no-bitwise */\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\t\t/* eslint-enable no-bitwise */\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\t// eslint-disable-next-line no-bitwise\n\tif (r >> 4 === g >> 4 && g >> 4 === b >> 4) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\targs = args[0];\n\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (Math.trunc(args > 50) + 1) * 0.5;\n\t/* eslint-disable no-bitwise */\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\targs = args[0];\n\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\t/* eslint-disable no-bitwise */\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f\\d]{6}|[a-f\\d]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = [...colorString].map(char => char + char).join('');\n\t}\n\n\tconst integer = Number.parseInt(colorString, 16);\n\t/* eslint-disable no-bitwise */\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\t/* eslint-enable no-bitwise */\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet hue;\n\n\tconst grayscale = chroma < 1 ? min / (1 - chroma) : 0;\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else if (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else if (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2 * s * l) : (2 * s * (1 - l));\n\n\tlet f = 0;\n\tif (c < 1) {\n\t\tf = (l - 0.5 * c) / (1 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0: {\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 1: {\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\t}\n\n\t\tcase 2: {\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\t}\n\n\t\tcase 3: {\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\t}\n\n\t\tcase 4: {\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\t}\n\n\t\tdefault: {\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t\t}\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255,\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1 - c);\n\tlet f = 0;\n\n\tif (v > 0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else if (l >= 0.5 && l < 1) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65_535) * 255, (apple[1] / 65_535) * 255, (apple[2] / 65_535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65_535, (rgb[1] / 255) * 65_535, (rgb[2] / 255) * 65_535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\t/* eslint-disable no-bitwise */\n\tconst value = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (value << 16) + (value << 8) + value;\n\t/* eslint-enable no-bitwise */\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.slice(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst value = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [value / 255 * 100];\n};\n","import conversions from './conversions.js';\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null,\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length > 0) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let {length} = adjacents, i = 0; i < length; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nfunction route(fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let {length} = models, i = 0; i < length; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n}\n\nexport default route;\n","import conversions from './conversions.js';\nimport route from './route.js';\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let {length} = result, i = 0; i < length; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfor (const fromModel of models) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\tfor (const toModel of routeModels) {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t}\n}\n\nexport default convert;\n","import colorString from 'color-string';\nimport convert from 'color-convert';\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](...arguments_);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst arguments_ = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(...arguments_);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(...this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(...rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_colour_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...arguments_) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments_.length > 0) {\n\t\t\treturn new Color(arguments_, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...arguments_) {\n\t\tlet color = arguments_[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(arguments_, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] ||= [])[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nexport default Color;\n"],"names":["aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","reverseNames","Object","create","name","hasOwn","cs","to","get","clamp","number_","min","max","Math","hexDouble","string_","round","toString","toUpperCase","length","string","value","model","slice","toLowerCase","hsl","hwb","rgb","match","i","hexAlpha","i2","Number","parseInt","parseFloat","alpha","isNaN","hex","rgba","percent","r","g","b","hsla","hwba","a","keyword","reverseKeywords","key","keys","convert","channels","labels","hsv","cmyk","xyz","lab","oklab","lch","oklch","ansi16","ansi256","hcg","apple","LAB_FT","srgbNonlinearTransform","c","cc","srgbNonlinearTransformInv","Error","defineProperty","from","args","wrapConversion","toModel","graph","path","parent","fn","conversions","cur","unshift","conversion","delta","h","s","l","rdif","gdif","bdif","v","diff","diffc","w","lp","cbrt","mp","sp","k","reversed","currentClosestKeyword","currentClosestDistance","POSITIVE_INFINITY","distance","y","x","z","t3","t2","t1","smin","lmin","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","m","ll","aa","bb","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","saturation","ansi","color","mult","trunc","rem","colorString","map","char","join","integer","chroma","hue","pure","mg","fromModel","models","buildGraph","queue","current","pop","adjacents","adjacent","node","deriveBFS","wrapRaw","wrappedFn","arg0","wrapRounded","result","routes","routeModels","raw","skippedModels","hashedModelKeys","sort","limiters","Color","object","this","valpha","newArray","Array","prototype","call","zeroArray","splice","indexOf","hashedKeys","JSON","stringify","push","limit","freeze","toJSON","places","self","arguments_","percentString","array","unitArray","unitObject","roundToPlace","undefined","getset","maxfn","saturationl","lightness","saturationv","wblack","hexa","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","isArray","number","toFixed","roundTo","channel","modifier"],"sourceRoot":""}