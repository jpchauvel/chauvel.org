"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[21,5709],{75709:(e,t,r)=>{r.r(t),r.d(t,{default:()=>T});var n=r(14286),s=r(37635),i=r(8953),a=r(46918),o=r(86525),g=r(78644),l=r(3e3),c=r(83491),p=r(20927),S=r.n(p),v=r(76555);class u{constructor(e){var t;this._serverSettings=null!==(t=e.serverSettings)&&void 0!==t?t:s.ServerConnection.makeSettings()}get serverSettings(){return this._serverSettings}async create(e){return{data:{},serverSettings:this._serverSettings,update:async e=>e}}}var d=r(2536);class m{constructor(e){var t;this._isDisposed=!1,this._serverSettings=null!==(t=e.serverSettings)&&void 0!==t?t:s.ServerConnection.makeSettings(),this._stream=new d.Stream(this)}dispose(){this.isDisposed||(this._isDisposed=!0,d.Signal.clearData(this),this._stream.stop())}get isDisposed(){return this._isDisposed}get stream(){return this._stream}get serverSettings(){return this._serverSettings}async emit({data:e,schema_id:t}){this._stream.emit({...e,schema_id:t})}}const I={id:"@jupyterlite/services-extension:config-section-manager",autoStart:!0,provides:s.IConfigSectionManager,optional:[s.IServerSettings],description:"Provides the config section manager.",activate:(e,t)=>{const r=new u({serverSettings:t});return s.ConfigSection._setConfigSectionManager(r),r}},C={id:"@jupyterlite/services-extension:default-drive",description:"The default drive for the contents manager.",autoStart:!0,provides:s.IDefaultDrive,requires:[g.ILocalForage],activate:async(e,t)=>{const r=`JupyterLite Storage - ${n.PageConfig.getOption("baseUrl")}`,s=n.PageConfig.getOption("contentsStorageName")||r,i=JSON.parse(n.PageConfig.getOption("contentsStorageDrivers")||"null"),{localforage:o}=t;return new a.BrowserStorageDrive({storageName:s,storageDrivers:i,localforage:o})}},f={id:"@jupyterlite/services-extension:event-manager",description:"The event manager plugin.",autoStart:!0,provides:s.IEventManager,optional:[s.IServerSettings],activate:(e,t)=>new m({serverSettings:t})},h={id:"@jupyterlite/services-extension:kernel-manager",description:"The kernel manager plugin.",autoStart:!0,provides:s.IKernelManager,requires:[o.IKernelClient,o.IKernelSpecClient],optional:[s.IServerSettings],activate:(e,t,r,n)=>new s.KernelManager({kernelAPIClient:t,kernelSpecAPIClient:r,serverSettings:{...s.ServerConnection.makeSettings(),...n,WebSocket:v.WebSocket}})},k={id:"@jupyterlite/services-extension:kernel-spec-client",description:"The client for managing in-browser kernel specs",autoStart:!0,requires:[o.IKernelSpecs],optional:[s.IServerSettings],provides:o.IKernelSpecClient,activate:(e,t,r)=>new o.LiteKernelSpecClient({kernelSpecs:t,serverSettings:r})},y={id:"@jupyterlite/services-extension:kernel-spec-manager",description:"The kernel spec manager plugin.",autoStart:!0,provides:s.IKernelSpecManager,requires:[o.IKernelSpecClient],optional:[o.IKernelSpecs,s.IServerSettings],activate:(e,t,r,n)=>{const i=new s.KernelSpecManager({kernelSpecAPIClient:t,serverSettings:n});return r&&r.changed.connect((()=>{i.refreshSpecs()})),i}},w={id:"@jupyterlite/services-extension:kernel-client",description:"The client for managing in-browser kernels",autoStart:!0,requires:[o.IKernelSpecs],optional:[s.IServerSettings],provides:o.IKernelClient,activate:(e,t,r)=>new o.LiteKernelClient({kernelSpecs:t,serverSettings:r})},M={id:"@jupyterlite/services-extension:kernel-specs",description:"The in-browser kernel spec manager plugin.",autoStart:!0,provides:o.IKernelSpecs,activate:e=>new o.KernelSpecs},_={id:"@jupyterlite/services-extension:localforage",autoStart:!0,provides:g.ILocalForage,activate:async e=>(JSON.parse(n.PageConfig.getOption("enableMemoryStorage")||"false")&&(console.warn("Memory storage fallback enabled: contents and settings may not be saved"),await(0,g.ensureMemoryStorage)(S())),{localforage:S()})},P={id:"@jupyterlite/services-extension:nbconvert-manager",description:"The nbconvert manager plugin.",autoStart:!0,provides:s.INbConvertManager,optional:[s.IServerSettings],activate:(e,t)=>new class extends s.NbConvertManager{async getExportFormats(e){return{}}}({serverSettings:t})},b={id:"@jupyterlite/services-extension:session-manager",description:"The session manager plugin.",autoStart:!0,provides:s.ISessionManager,requires:[s.IKernelManager,o.IKernelClient],optional:[s.IServerSettings],activate:(e,t,r,n)=>{const i=new l.LiteSessionClient({kernelClient:r,serverSettings:n});return new s.SessionManager({kernelManager:t,serverSettings:n,sessionAPIClient:i})}},K={id:"@jupyterlite/services-extension:settings",autoStart:!0,requires:[g.ILocalForage],optional:[s.IServerSettings],provides:s.ISettingManager,activate:(e,t,r)=>{const s=`JupyterLite Storage - ${n.PageConfig.getOption("baseUrl")}`,i=n.PageConfig.getOption("settingsStorageName")||s,a=JSON.parse(n.PageConfig.getOption("settingsStorageDrivers")||"null"),{localforage:o}=t;return new c.Settings({storageName:i,storageDrivers:a,localforage:o,serverSettings:null!=r?r:void 0})}},O={id:"@jupyterlite/services-extension:user-manager",description:"The user manager plugin.",autoStart:!0,provides:s.IUserManager,optional:[s.IServerSettings],activate:(e,t)=>new class extends s.UserManager{async requestUser(){}}({serverSettings:t})},x={id:"@jupyterlite/services-extension:workspace-manager",description:"The workspace manager plugin.",autoStart:!0,provides:s.IWorkspaceManager,requires:[g.ILocalForage],activate:(e,t)=>{const r=`JupyterLite Storage - ${n.PageConfig.getOption("baseUrl")}`,s=n.PageConfig.getOption("workspacesStorageName")||r,a=JSON.parse(n.PageConfig.getOption("workspacesStorageDrivers")||"null"),{localforage:o}=t;return new i.LiteWorkspaceManager({storageName:s,storageDrivers:a,localforage:o})}},T=[I,C,f,h,w,k,y,M,_,P,b,K,O,x]}}]);
//# sourceMappingURL=21.a2dda11.js.map