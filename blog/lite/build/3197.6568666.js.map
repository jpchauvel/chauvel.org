{"version":3,"file":"3197.6568666.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/grammar-loader.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-JEIROHC2.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseSlice.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/drop.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/assign.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/pickBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/isRegExp.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseIsRegExp.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/gast/lib/src/model.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/uniq.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseSome.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/some.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/includes.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_arrayEvery.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseEvery.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/every.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/constants.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/negate.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/reject.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/indexOf.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/difference.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseDifference.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/compact.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/head.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/utils/lib/src/print.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/lexer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/utils/lib/src/timer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_arrayAggregator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseAggregator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/groupBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_createAggregator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/dropRight.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain-allstar/lib/atn.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain-allstar/lib/dfa.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/uniqBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/cst-node-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/langium-parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/parser-builder-base.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/promise-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/documents.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/linker.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/name-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/uri-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/validation/validation-registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/validation/document-validator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/references.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/collections.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/scope-computation.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/scope.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/caching.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/references/scope-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/serializer/json-serializer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/service-registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/ast-descriptions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/ast-node-locator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/disposable.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/configuration.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/document-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/index-manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/workspace-manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/lexer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/documentation/jsdoc.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/documentation/documentation-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/documentation/comment-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/async-parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/workspace-lock.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/serializer/hydrator.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/default-module.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/languages/grammar-config.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/langium-parser-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/completion-parser-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/dependency-injection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/languages/generated/ast.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/token-builder.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/parser/value-converter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/syntax-tree.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/ast-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/cst-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/errors.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/grammar-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/regexp-utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/utils/stream.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/langium/lib/workspace/file-system-provider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseExtremum.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseLt.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseMap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseSet.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_basePickBy.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/clone.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/defaults.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/findIndex.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/find.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_createFind.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/flatMap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/flatten.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseHas.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/has.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/isString.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/last.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/map.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/min.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_trimmedEndIndex.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/_baseTrim.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/toNumber.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/toFinite.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash-es/toInteger.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/process/browser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/events.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/is.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-uri/lib/esm/index.mjs"],"sourcesContent":["export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Axis = \"Axis\";\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar ClassDefStatement = \"ClassDefStatement\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Curve = \"Curve\";\nvar Edge = \"Edge\";\nvar Entry = \"Entry\";\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Group = \"Group\";\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Item = \"Item\";\nvar Junction = \"Junction\";\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Option = \"Option\";\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Radar = \"Radar\";\nvar Service = \"Service\";\nvar Treemap = \"Treemap\";\nfunction isTreemap(item) {\n  return reflection.isInstance(item, Treemap);\n}\n__name(isTreemap, \"isTreemap\");\nvar TreemapRow = \"TreemapRow\";\nvar Direction = \"Direction\";\nvar Leaf = \"Leaf\";\nvar Section = \"Section\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [Architecture, Axis, Branch, Checkout, CherryPicking, ClassDefStatement, Commit, Curve, Direction, Edge, Entry, GitGraph, Group, Info, Item, Junction, Leaf, Merge, Option, Packet, PacketBlock, Pie, PieSection, Radar, Section, Service, Statement, Treemap, TreemapRow];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      case Leaf:\n      case Section: {\n        return this.isSubtype(Item, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      case \"Entry:axis\": {\n        return Axis;\n      }\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case Architecture: {\n        return {\n          name: Architecture,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Axis: {\n        return {\n          name: Axis,\n          properties: [\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Branch: {\n        return {\n          name: Branch,\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case Checkout: {\n        return {\n          name: Checkout,\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case CherryPicking: {\n        return {\n          name: CherryPicking,\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case ClassDefStatement: {\n        return {\n          name: ClassDefStatement,\n          properties: [\n            { name: \"className\" },\n            { name: \"styleText\" }\n          ]\n        };\n      }\n      case Commit: {\n        return {\n          name: Commit,\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Curve: {\n        return {\n          name: Curve,\n          properties: [\n            { name: \"entries\", defaultValue: [] },\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Edge: {\n        return {\n          name: Edge,\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Entry: {\n        return {\n          name: Entry,\n          properties: [\n            { name: \"axis\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case GitGraph: {\n        return {\n          name: GitGraph,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Group: {\n        return {\n          name: Group,\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Info: {\n        return {\n          name: Info,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Item: {\n        return {\n          name: Item,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Junction: {\n        return {\n          name: Junction,\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case Merge: {\n        return {\n          name: Merge,\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Option: {\n        return {\n          name: Option,\n          properties: [\n            { name: \"name\" },\n            { name: \"value\", defaultValue: false }\n          ]\n        };\n      }\n      case Packet: {\n        return {\n          name: Packet,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PacketBlock: {\n        return {\n          name: PacketBlock,\n          properties: [\n            { name: \"bits\" },\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case Pie: {\n        return {\n          name: Pie,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PieSection: {\n        return {\n          name: PieSection,\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Radar: {\n        return {\n          name: Radar,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"axes\", defaultValue: [] },\n            { name: \"curves\", defaultValue: [] },\n            { name: \"options\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Service: {\n        return {\n          name: Service,\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Treemap: {\n        return {\n          name: Treemap,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" },\n            { name: \"TreemapRows\", defaultValue: [] }\n          ]\n        };\n      }\n      case TreemapRow: {\n        return {\n          name: TreemapRow,\n          properties: [\n            { name: \"indent\" },\n            { name: \"item\" }\n          ]\n        };\n      }\n      case Direction: {\n        return {\n          name: Direction,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Leaf: {\n        return {\n          name: Leaf,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Section: {\n        return {\n          name: Section,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Info\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Packet\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"packet\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"bits\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]}]},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Pie\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Architecture\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"LeftPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"RightPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Arrow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"GitGraph\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"REFERENCE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\nvar loadedRadarGrammar;\nvar RadarGrammar = /* @__PURE__ */ __name(() => loadedRadarGrammar ?? (loadedRadarGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Radar\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Radar\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\"radar-beta:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"axis\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"curve\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Label\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"[\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"]\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Axis\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Curve\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\"{\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\"}\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Entries\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"DetailedEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"axis\",\"operator\":\"=\",\"terminal\":{\"$type\":\"CrossReference\",\"type\":{\"$ref\":\"#/rules@2\"},\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"deprecatedSyntax\":false}},{\"$type\":\"Keyword\",\"value\":\":\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"NumberEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Option\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showLegend\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"ticks\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"max\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"min\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"graticule\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"GRATICULE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"circle\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"polygon\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Entry\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"axis\",\"isOptional\":true,\"type\":{\"$type\":\"ReferenceType\",\"referenceType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@2\"}}}},{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"types\":[],\"usedGrammars\":[]}`)), \"RadarGrammar\");\nvar loadedTreemapGrammar;\nvar TreemapGrammar = /* @__PURE__ */ __name(() => loadedTreemapGrammar ?? (loadedTreemapGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Treemap\",\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Treemap\",\"returnType\":{\"$ref\":\"#/interfaces@4\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"TreemapRows\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"TREEMAP_KEYWORD\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap-beta\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"CLASS_DEF\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/classDef\\\\\\\\s+([a-zA-Z_][a-zA-Z0-9_]+)(?:\\\\\\\\s+([^;\\\\\\\\r\\\\\\\\n]*))?(?:;)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STYLE_SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":::\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"COMMA\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\",\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WS\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"ML_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\%\\\\\\\\%[^\\\\\\\\n]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"NL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"TreemapRow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"indent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"item\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"ClassDef\",\"dataType\":\"string\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Item\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Section\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Leaf\",\"returnType\":{\"$ref\":\"#/interfaces@2\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INDENTATION\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]{1,}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[a-zA-Z_][a-zA-Z0-9_]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9_\\\\\\\\.\\\\\\\\,]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"MyNumber\",\"dataType\":\"number\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Item\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"name\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"classSelector\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Section\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[]},{\"$type\":\"Interface\",\"name\":\"Leaf\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}]},{\"$type\":\"Interface\",\"name\":\"ClassDefStatement\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"className\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"styleText\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Treemap\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"TreemapRows\",\"type\":{\"$type\":\"ArrayType\",\"elementType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@14\"}}},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[],\"$comment\":\"/**\\\\n * Treemap grammar for Langium\\\\n * Converted from mindmap grammar\\\\n *\\\\n * The ML_COMMENT and NL hidden terminals handle whitespace, comments, and newlines\\\\n * before the treemap keyword, allowing for empty lines and comments before the\\\\n * treemap declaration.\\\\n */\"}`)), \"TreemapGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar RadarLanguageMetaData = {\n  languageId: \"radar\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar TreemapLanguageMetaData = {\n  languageId: \"treemap\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar RadarGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => RadarGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => RadarLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar TreemapGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => TreemapGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => TreemapLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  Radar,\n  Treemap,\n  isTreemap,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  RadarGeneratedModule,\n  TreemapGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  RadarGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/radar/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/radar/tokenBuilder.ts\nvar RadarTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"RadarTokenBuilder\");\n  }\n  constructor() {\n    super([\"radar-beta\"]);\n  }\n};\n\n// src/language/radar/module.ts\nvar RadarModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new RadarTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createRadarServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Radar = inject(\n    createDefaultCoreModule({ shared }),\n    RadarGeneratedModule,\n    RadarModule\n  );\n  shared.ServiceRegistry.register(Radar);\n  return { shared, Radar };\n}\n__name(createRadarServices, \"createRadarServices\");\n\nexport {\n  RadarModule,\n  createRadarServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  TreemapGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/treemap/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/treemap/tokenBuilder.ts\nvar TreemapTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"TreemapTokenBuilder\");\n  }\n  constructor() {\n    super([\"treemap\"]);\n  }\n};\n\n// src/language/treemap/valueConverter.ts\nvar classDefRegex = /classDef\\s+([A-Z_a-z]\\w+)(?:\\s+([^\\n\\r;]*))?;?/;\nvar TreemapValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"TreemapValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"NUMBER2\") {\n      return parseFloat(input.replace(/,/g, \"\"));\n    } else if (rule.name === \"SEPARATOR\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"STRING2\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"INDENTATION\") {\n      return input.length;\n    } else if (rule.name === \"ClassDef\") {\n      if (typeof input !== \"string\") {\n        return input;\n      }\n      const match = classDefRegex.exec(input);\n      if (match) {\n        return {\n          $type: \"ClassDefStatement\",\n          className: match[1],\n          styleText: match[2] || void 0\n        };\n      }\n    }\n    return void 0;\n  }\n};\n\n// src/language/treemap/treemap-validator.ts\nfunction registerValidationChecks(services) {\n  const validator = services.validation.TreemapValidator;\n  const registry = services.validation.ValidationRegistry;\n  if (registry) {\n    const checks = {\n      Treemap: validator.checkSingleRoot.bind(validator)\n      // Remove unused validation for TreemapRow\n    };\n    registry.register(checks, validator);\n  }\n}\n__name(registerValidationChecks, \"registerValidationChecks\");\nvar TreemapValidator = class {\n  static {\n    __name(this, \"TreemapValidator\");\n  }\n  /**\n   * Validates that a treemap has only one root node.\n   * A root node is defined as a node that has no indentation.\n   */\n  checkSingleRoot(doc, accept) {\n    let rootNodeIndentation;\n    for (const row of doc.TreemapRows) {\n      if (!row.item) {\n        continue;\n      }\n      if (rootNodeIndentation === void 0 && // Check if this is a root node (no indentation)\n      row.indent === void 0) {\n        rootNodeIndentation = 0;\n      } else if (row.indent === void 0) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      } else if (rootNodeIndentation !== void 0 && rootNodeIndentation >= parseInt(row.indent, 10)) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      }\n    }\n  }\n};\n\n// src/language/treemap/module.ts\nvar TreemapModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new TreemapTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new TreemapValueConverter(), \"ValueConverter\")\n  },\n  validation: {\n    TreemapValidator: /* @__PURE__ */ __name(() => new TreemapValidator(), \"TreemapValidator\")\n  }\n};\nfunction createTreemapServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Treemap = inject(\n    createDefaultCoreModule({ shared }),\n    TreemapGeneratedModule,\n    TreemapModule\n  );\n  shared.ServiceRegistry.register(Treemap);\n  registerValidationChecks(Treemap);\n  return { shared, Treemap };\n}\n__name(createTreemapServices, \"createTreemapServices\");\n\nexport {\n  TreemapModule,\n  createTreemapServices\n};\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-JEIROHC2.mjs\";\nimport {\n  RadarModule,\n  createRadarServices\n} from \"./chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs\";\nimport {\n  TreemapModule,\n  createTreemapServices\n} from \"./chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap\n} from \"./chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-63CPKGFF.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-HUATNLJX.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-WTHONI2E.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-O4VJ6CD3.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-ZV4HHKMB.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\"),\n  radar: /* @__PURE__ */ __name(async () => {\n    const { createRadarServices: createRadarServices2 } = await import(\"./chunks/mermaid-parser.core/radar-NJJJXTRR.mjs\");\n    const parser = createRadarServices2().Radar.parser.LangiumParser;\n    parsers.radar = parser;\n  }, \"radar\"),\n  treemap: /* @__PURE__ */ __name(async () => {\n    const { createTreemapServices: createTreemapServices2 } = await import(\"./chunks/mermaid-parser.core/treemap-75Q7IDZK.mjs\");\n    const parser = createTreemapServices2().Treemap.parser.LangiumParser;\n    parsers.treemap = parser;\n  }, \"treemap\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  RadarModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  TreemapModule,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createRadarServices,\n  createTreemapServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap,\n  parse\n};\n","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        var _a;\n        return (_a = this.nodeStack[this.nodeStack.length - 1]) !== null && _a !== void 0 ? _a : this.rootNode;\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, !feature);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    addHiddenNodes(tokens) {\n        const nodes = [];\n        for (const token of tokens) {\n            const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            leafNode.root = this.rootNode;\n            nodes.push(leafNode);\n        }\n        let current = this.current;\n        let added = false;\n        // If we are within a composite node, we add the hidden nodes to the content\n        if (current.content.length > 0) {\n            current.content.push(...nodes);\n            return;\n        }\n        // Otherwise we are at a newly created node\n        // Instead of adding the hidden nodes here, we search for the first parent node with content\n        while (current.container) {\n            const index = current.container.content.indexOf(current);\n            if (index > 0) {\n                // Add the hidden nodes before the current node\n                current.container.content.splice(index, 0, ...nodes);\n                added = true;\n                break;\n            }\n            current = current.container;\n        }\n        // If we arrive at the root node, we add the hidden nodes at the beginning\n        // This is the case if the hidden nodes are the first nodes in the tree\n        if (!added) {\n            this.rootNode.content.unshift(...nodes);\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getExplicitRuleType, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.allRules = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { skipValidations: production, errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    getRule(name) {\n        return this.allRules.get(name);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = this.computeRuleType(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    computeRuleType(rule) {\n        if (rule.fragment) {\n            return undefined;\n        }\n        else if (isDataTypeRule(rule)) {\n            return DatatypeSymbol;\n        }\n        else {\n            const explicit = getExplicitRuleType(rule);\n            return explicit !== null && explicit !== void 0 ? explicit : rule.name;\n        }\n    }\n    parse(input, options = {}) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const ruleMethod = options.rule ? this.allRules.get(options.rule) : this.mainRule;\n        if (!ruleMethod) {\n            throw new Error(options.rule ? `No rule found with name '${options.rule}'` : 'No main rule available.');\n        }\n        const result = ruleMethod.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenNodes(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        this.lexerResult = undefined;\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            lexerReport: lexerResult.report,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            // Only create a new AST node in case the calling rule is not a fragment rule\n            const createNode = !this.isRecording() && $type !== undefined;\n            if (createNode) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (result === undefined && createNode) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    extractHiddenTokens(token) {\n        const hiddenTokens = this.lexerResult.hidden;\n        if (!hiddenTokens.length) {\n            return [];\n        }\n        const offset = token.startOffset;\n        for (let i = 0; i < hiddenTokens.length; i++) {\n            const token = hiddenTokens[i];\n            if (token.startOffset > offset) {\n                return hiddenTokens.splice(0, i);\n            }\n        }\n        return hiddenTokens.splice(0, hiddenTokens.length);\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const hiddenTokens = this.extractHiddenTokens(token);\n            this.nodeBuilder.addHiddenNodes(hiddenTokens);\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        let cstNode;\n        if (!this.isRecording() && !fragment) {\n            // We only want to create a new CST node if the subrule actually creates a new AST node.\n            // In other cases like calls of fragment rules the current CST/AST is populated further.\n            // Note that skipping this initialization and leaving cstNode unassigned also skips the subrule assignment later on.\n            // This is intended, as fragment rules only enrich the current AST node\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const object = this.assignWithoutOverride(result, current);\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            if (action.feature && action.operator) {\n                last = this.construct();\n                this.nodeBuilder.removeNode(last.$cstNode);\n                const node = this.nodeBuilder.buildCompositeNode(action);\n                node.content.push(last.$cstNode);\n                const newItem = { $type };\n                this.stack.push(newItem);\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n            else {\n                last.$type = $type;\n            }\n        }\n    }\n    construct() {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        this.stack.pop();\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        // The target was parsed from a unassigned subrule\n        // After the subrule construction, it received a cst node\n        // This CST node will later be overriden by the cst node builder\n        // To prevent references to stale AST nodes in the CST,\n        // we need to remove the reference here\n        const targetCstNode = target.$cstNode;\n        if (targetCstNode) {\n            targetCstNode.astNode = undefined;\n            target.$cstNode = undefined;\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input, { mode: 'partial' });\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy({\n                    // If validations are skipped, don't log the lookahead warnings\n                    logging: config.skipValidations ? () => { } : undefined\n                }) }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const parserContext = {\n        parser,\n        tokens,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        parserContext.parser.rule(rule, buildElement(ctx, rule.definition));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const fragment = rule.fragment;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), fragment, ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule: ${ruleCall.rule.$refText}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        // The terminal is a data type rule here. Everything else will result in a validation error.\n        const rule = terminal.rule.ref;\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), false, crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.parser.getRule(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = performance.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = performance.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n        // prevent calling delayNextTick every iteration of loop\n        // where delayNextTick takes up the majority or all of the\n        // globalInterruptionPeriod itself\n        lastTick = performance.now();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, token) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, textDocument, token);\n        }\n        else {\n            return this.create(uri, textDocument, token);\n        }\n    }\n    fromString(text, uri, token) {\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, text, token);\n        }\n        else {\n            return this.create(uri, text, token);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content, options) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content, options);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText(), options);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text, options) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text, options);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            const linker = this.serviceRegistry.getServices(uri).references.Linker;\n            linker.unlink(langiumDoc);\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        var _a;\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            ref._ref = ref_resolving;\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                    else {\n                        // Try to load the target AST node later using the already provided description\n                        ref._ref = undefined;\n                    }\n                }\n            }\n            catch (err) {\n                console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n                const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}` });\n            }\n            // Add the reference to the document's array of references\n            // Only add if the reference has been not been resolved earlier\n            // Otherwise we end up with duplicates\n            // See also implementation of `buildReference`\n            document.references.push(ref);\n        }\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    this._ref = ref_resolving;\n                    const document = findRootNode(node).$document;\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return this._ref = undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                    document === null || document === void 0 ? void 0 : document.references.push(this);\n                }\n                else if (this._ref === ref_resolving) {\n                    throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        var _a;\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n            const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = findRootNode(refInfo.container).$document;\n        if (document && document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n    function normalize(uri) {\n        return URI.parse(uri.toString()).toString();\n    }\n    UriUtils.normalize = normalize;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../index.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.entriesBefore = [];\n        this.entriesAfter = [];\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n            else {\n                assertUnreachable(callbacks);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, node, accept, cancelToken), 'An error occurred during validation', accept, node);\n        };\n    }\n    async handleException(functionality, messageContext, accept, node) {\n        try {\n            await functionality();\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error(`${messageContext}:`, err);\n            if (err instanceof Error && err.stack) {\n                console.error(err.stack);\n            }\n            const messageDetails = err instanceof Error ? err.message : String(err);\n            accept('error', `${messageContext}: ${messageDetails}`, { node });\n        }\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n    /**\n     * Register logic which will be executed once before validating all the nodes of an AST/Langium document.\n     * This helps to prepare or initialize some information which are required or reusable for the following checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map for mapping names to nodes could be established.\n     * During the usual checks on the nodes, they are put into this map with their name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerBeforeDocument(checkBefore, thisObj = this) {\n        this.entriesBefore.push(this.wrapPreparationException(checkBefore, 'An error occurred during set-up of the validation', thisObj));\n    }\n    /**\n     * Register logic which will be executed once after validating all the nodes of an AST/Langium document.\n     * This helps to finally evaluate information which are collected during the checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map with all the collected nodes and their names is checked\n     * and validation hints are created for all nodes with the same name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerAfterDocument(checkAfter, thisObj = this) {\n        this.entriesAfter.push(this.wrapPreparationException(checkAfter, 'An error occurred during tear-down of the validation', thisObj));\n    }\n    wrapPreparationException(check, messageContext, thisObj) {\n        return async (rootNode, accept, categories, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, rootNode, accept, categories, cancelToken), messageContext, accept, rootNode);\n        };\n    }\n    get checksBefore() {\n        return this.entriesBefore;\n    }\n    get checksAfter() {\n        return this.entriesAfter;\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        var _a, _b, _c;\n        const lexerDiagnostics = [...parseResult.lexerErrors, ...(_b = (_a = parseResult.lexerReport) === null || _a === void 0 ? void 0 : _a.diagnostics) !== null && _b !== void 0 ? _b : []];\n        for (const lexerDiagnostic of lexerDiagnostics) {\n            const severity = (_c = lexerDiagnostic.severity) !== null && _c !== void 0 ? _c : 'error';\n            const diagnostic = {\n                severity: toDiagnosticSeverity(severity),\n                range: {\n                    start: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column - 1\n                    },\n                    end: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column + lexerDiagnostic.length - 1\n                    }\n                },\n                message: lexerDiagnostic.message,\n                data: toDiagnosticData(severity),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await this.validateAstBefore(rootNode, options, acceptor, cancelToken);\n        await this.validateAstNodes(rootNode, options, acceptor, cancelToken);\n        await this.validateAstAfter(rootNode, options, acceptor, cancelToken);\n        return validationItems;\n    }\n    async validateAstBefore(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksBefore = this.validationRegistry.checksBefore;\n        for (const checkBefore of checksBefore) {\n            await interruptAndCheck(cancelToken);\n            await checkBefore(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    async validateAstNodes(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n    }\n    async validateAstAfter(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksAfter = this.validationRegistry.checksAfter;\n        for (const checkAfter of checksAfter) {\n            await interruptAndCheck(cancelToken);\n            await checkAfter(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\n/**\n * Transforms the diagnostic severity from the {@link LexingDiagnosticSeverity} format to LSP's `DiagnosticSeverity` format.\n *\n * @param severity The lexing diagnostic severity\n * @returns Diagnostic severity according to `vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity`\n */\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1;\n        case 'warning':\n            return 2;\n        case 'info':\n            return 3;\n        case 'hint':\n            return 4;\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport function toDiagnosticData(severity) {\n    switch (severity) {\n        case 'error':\n            return diagnosticData(DocumentValidator.LexingError);\n        case 'warning':\n            return diagnosticData(DocumentValidator.LexingWarning);\n        case 'info':\n            return diagnosticData(DocumentValidator.LexingInfo);\n        case 'hint':\n            return diagnosticData(DocumentValidator.LexingHint);\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.LexingWarning = 'lexing-warning';\n    DocumentValidator.LexingInfo = 'lexing-info';\n    DocumentValidator.LexingHint = 'lexing-hint';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCancelled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    /**\n     * Creates a new document cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     *\n     * Providing a state here will use `DocumentBuilder#onDocumentPhase` instead,\n     * which triggers on all documents that have been affected by this change, assuming that the\n     * state is `DocumentState.Linked` or a later state.\n     */\n    constructor(sharedServices, state) {\n        super(uri => uri.toString());\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onDocumentPhase(state, document => {\n                this.clear(document.uri.toString());\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                for (const uri of deleted) { // react only on deleted documents\n                    this.clear(uri);\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n                const allUris = changed.concat(deleted); // react on both changed and deleted documents\n                for (const uri of allUris) {\n                    this.clear(uri);\n                }\n            }));\n        }\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace is added, changed or deleted, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    /**\n     * Creates a new workspace cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     */\n    constructor(sharedServices, state) {\n        super();\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state, () => {\n                this.clear();\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                if (deleted.length > 0) { // react only on deleted documents\n                    this.clear();\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n                this.clear();\n            }));\n        }\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options) {\n        const serializeOptions = options !== null && options !== void 0 ? options : {};\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, serializeOptions);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options) {\n        const deserializeOptions = options !== null && options !== void 0 ? options : {};\n        const root = JSON.parse(content);\n        this.linkNode(root, root, deserializeOptions);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    /**\n     * @deprecated Use the new `fileExtensionMap` (or `languageIdMap`) property instead.\n     */\n    get map() {\n        return this.fileExtensionMap;\n    }\n    constructor(services) {\n        this.languageIdMap = new Map();\n        this.fileExtensionMap = new Map();\n        this.textDocuments = services === null || services === void 0 ? void 0 : services.workspace.TextDocuments;\n    }\n    register(language) {\n        const data = language.LanguageMetaData;\n        for (const ext of data.fileExtensions) {\n            if (this.fileExtensionMap.has(ext)) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`);\n            }\n            this.fileExtensionMap.set(ext, language);\n        }\n        this.languageIdMap.set(data.languageId, language);\n        if (this.languageIdMap.size === 1) {\n            this.singleton = language;\n        }\n        else {\n            this.singleton = undefined;\n        }\n    }\n    getServices(uri) {\n        var _a, _b;\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.languageIdMap.size === 0) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const languageId = (_b = (_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(uri)) === null || _b === void 0 ? void 0 : _b.languageId;\n        if (languageId !== undefined) {\n            const services = this.languageIdMap.get(languageId);\n            if (services) {\n                return services;\n            }\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.fileExtensionMap.get(ext);\n        if (!services) {\n            if (languageId) {\n                throw new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`);\n            }\n            else {\n                throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n            }\n        }\n        return services;\n    }\n    hasServices(uri) {\n        try {\n            this.getServices(uri);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    get all() {\n        return Array.from(this.languageIdMap.values());\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document) {\n        const doc = document !== null && document !== void 0 ? document : getDocument(node);\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: doc.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Emitter } from '../utils/event.js';\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.onConfigurationSectionUpdateEmitter = new Emitter();\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            const configuration = change.settings[section];\n            this.updateSectionConfiguration(section, configuration);\n            this.onConfigurationSectionUpdateEmitter.fire({ section, configuration });\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n    get onConfigurationSectionUpdate() {\n        return this.onConfigurationSectionUpdateEmitter.event;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.documentPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect and sort all documents that we should rebuild\n        const rebuildDocuments = this.sortDocuments(this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray());\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Sort the given documents by priority. By default, documents with an open text document are prioritized.\n     * This is useful to ensure that visible documents show their diagnostics before all other documents.\n     *\n     * This improves the responsiveness in large workspaces as users usually don't care about diagnostics\n     * in files that are currently not opened in the editor.\n     */\n    sortDocuments(documents) {\n        let left = 0;\n        let right = documents.length - 1;\n        while (left < right) {\n            while (left < documents.length && this.hasTextDocument(documents[left])) {\n                left++;\n            }\n            while (right >= 0 && !this.hasTextDocument(documents[right])) {\n                right--;\n            }\n            if (left < right) {\n                [documents[left], documents[right]] = [documents[right], documents[left]];\n            }\n        }\n        return documents;\n    }\n    hasTextDocument(doc) {\n        var _a;\n        return Boolean((_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(doc.uri));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     *\n     * @param documents The documents to build.\n     * @param options the {@link BuildOptions} to use.\n     * @param cancelToken A cancellation token that can be used to cancel the build.\n     * @returns A promise that resolves when the build is done.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    /**\n     * Runs prior to beginning the build process to update the {@link DocumentBuildState} for each document\n     *\n     * @param documents collection of documents to be built\n     * @param options the {@link BuildOptions} to use\n     */\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    /**\n     * Runs a cancelable operation on a set of documents to bring them to a specified {@link DocumentState}.\n     *\n     * @param documents The array of documents to process.\n     * @param targetState The target {@link DocumentState} to bring the documents to.\n     * @param cancelToken A token that can be used to cancel the operation.\n     * @param callback A function to be called for each document.\n     * @returns A promise that resolves when all documents have been processed or the operation is canceled.\n     * @throws Will throw `OperationCancelled` if the operation is canceled via a `CancellationToken`.\n     */\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(doc => doc.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n            await this.notifyDocumentPhase(document, targetState, cancelToken);\n        }\n        // Do not use `filtered` here, as that will miss documents that have previously reached the current target state\n        // For example, this happens in case the cancellation triggers between the processing of two documents\n        // Or files that were picked up during the workspace initialization\n        const targetStateDocs = documents.filter(doc => doc.state === targetState);\n        await this.notifyBuildPhase(targetStateDocs, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    onDocumentPhase(targetState, callback) {\n        this.documentPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.documentPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyDocumentPhase(document, state, cancelToken) {\n        const listeners = this.documentPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            try {\n                await listener(document, cancelToken);\n            }\n            catch (err) {\n                // Ignore cancellation errors\n                // We want to finish the listeners before throwing\n                if (!isOperationCancelled(err)) {\n                    throw err;\n                }\n            }\n        }\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    get workspaceFolders() {\n        return this.folders;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer, defaultLexerErrorProvider } from 'chevrotain';\nexport class DefaultLexerErrorMessageProvider {\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return defaultLexerErrorProvider.buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column);\n    }\n    buildUnableToPopLexerModeMessage(token) {\n        return defaultLexerErrorProvider.buildUnableToPopLexerModeMessage(token);\n    }\n}\nexport const DEFAULT_TOKENIZE_OPTIONS = { mode: 'full' };\nexport class DefaultLexer {\n    constructor(services) {\n        this.errorMessageProvider = services.parser.LexerErrorMessageProvider;\n        this.tokenBuilder = services.parser.TokenBuilder;\n        const tokens = this.tokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full',\n            skipValidations: production,\n            errorMessageProvider: this.errorMessageProvider\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text, _options = DEFAULT_TOKENIZE_OPTIONS) {\n        var _a, _b, _c;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : [],\n            report: (_c = (_b = this.tokenBuilder).flushLexingReport) === null || _c === void 0 ? void 0 : _c.call(_b, text)\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser which simply wraps the sync parser in a promise.\n *\n * @remarks\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text, _cancelToken) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled, startCancelableOperation } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = startCancelableOperation();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken = CancellationToken.None) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport ? this.dehydrateLexerReport(result.lexerReport) : undefined,\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            parserErrors: result.parserErrors.map(e => (Object.assign(Object.assign({}, e), { message: e.message }))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    dehydrateLexerReport(lexerReport) {\n        // By default, lexer reports are serializable\n        return lexerReport;\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (!node) {\n            return undefined;\n        }\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        return element;\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer, DefaultLexerErrorMessageProvider } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider(),\n            LexerErrorMessageProvider: () => new DefaultLexerErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: (services) => new DefaultServiceRegistry(services),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        set: () => {\n            throw new Error('Cannot set property on injected service container');\n        },\n        get: (obj, prop) => {\n            if (prop === isProxy) {\n                return true;\n            }\n            else {\n                return _resolve(obj, prop, module, injector || proxy);\n            }\n        },\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)), // used by for..in\n        has: (_, prop) => prop in module, // used by ..in..\n        ownKeys: () => [...Object.getOwnPropertyNames(module)] // used by for..in\n    });\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.3.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return [AbstractElement, AbstractRule, AbstractType, Action, Alternatives, ArrayLiteral, ArrayType, Assignment, BooleanLiteral, CharacterRange, Condition, Conjunction, CrossReference, Disjunction, EndOfFile, Grammar, GrammarImport, Group, InferredType, Interface, Keyword, NamedArgument, NegatedToken, Negation, NumberLiteral, Parameter, ParameterReference, ParserRule, ReferenceType, RegexToken, ReturnType, RuleCall, SimpleType, StringLiteral, TerminalAlternatives, TerminalGroup, TerminalRule, TerminalRuleCall, Type, TypeAttribute, TypeDefinition, UnionType, UnorderedGroup, UntilToken, ValueLiteral, Wildcard];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case AbstractElement: {\n                return {\n                    name: AbstractElement,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case ArrayLiteral: {\n                return {\n                    name: ArrayLiteral,\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case ArrayType: {\n                return {\n                    name: ArrayType,\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case BooleanLiteral: {\n                return {\n                    name: BooleanLiteral,\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case Conjunction: {\n                return {\n                    name: Conjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Disjunction: {\n                return {\n                    name: Disjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Grammar: {\n                return {\n                    name: Grammar,\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case GrammarImport: {\n                return {\n                    name: GrammarImport,\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case InferredType: {\n                return {\n                    name: InferredType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case Interface: {\n                return {\n                    name: Interface,\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case NamedArgument: {\n                return {\n                    name: NamedArgument,\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Negation: {\n                return {\n                    name: Negation,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NumberLiteral: {\n                return {\n                    name: NumberLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Parameter: {\n                return {\n                    name: Parameter,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case ParameterReference: {\n                return {\n                    name: ParameterReference,\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case ParserRule: {\n                return {\n                    name: ParserRule,\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case ReferenceType: {\n                return {\n                    name: ReferenceType,\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case ReturnType: {\n                return {\n                    name: ReturnType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case SimpleType: {\n                return {\n                    name: SimpleType,\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case StringLiteral: {\n                return {\n                    name: StringLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case TerminalRule: {\n                return {\n                    name: TerminalRule,\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Type: {\n                return {\n                    name: Type,\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case TypeAttribute: {\n                return {\n                    name: TypeAttribute,\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case UnionType: {\n                return {\n                    name: UnionType,\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case Action: {\n                return {\n                    name: Action,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Alternatives: {\n                return {\n                    name: Alternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Assignment: {\n                return {\n                    name: Assignment,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case CharacterRange: {\n                return {\n                    name: CharacterRange,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case CrossReference: {\n                return {\n                    name: CrossReference,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case EndOfFile: {\n                return {\n                    name: EndOfFile,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Group: {\n                return {\n                    name: Group,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Keyword: {\n                return {\n                    name: Keyword,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NegatedToken: {\n                return {\n                    name: NegatedToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case RegexToken: {\n                return {\n                    name: RegexToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case RuleCall: {\n                return {\n                    name: RuleCall,\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case TerminalAlternatives: {\n                return {\n                    name: TerminalAlternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalGroup: {\n                return {\n                    name: TerminalGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalRuleCall: {\n                return {\n                    name: TerminalRuleCall,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case UnorderedGroup: {\n                return {\n                    name: UnorderedGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case UntilToken: {\n                return {\n                    name: UntilToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case Wildcard: {\n                return {\n                    name: Wildcard,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    constructor() {\n        /**\n         * The list of diagnostics stored during the lexing process of a single text.\n         */\n        this.diagnostics = [];\n    }\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flushLexingReport(text) {\n        return { diagnostics: this.popDiagnostics() };\n    }\n    popDiagnostics() {\n        const diagnostics = [...this.diagnostics];\n        this.diagnostics = [];\n        return diagnostics;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n        };\n        if (typeof pattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u') || regex.flags.includes('s')) {\n            // Unicode and dotall regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        const keywordPattern = this.buildKeywordPattern(keyword, caseInsensitive);\n        const tokenType = {\n            name: keyword.value,\n            PATTERN: keywordPattern,\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n        if (typeof keywordPattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        return tokenType;\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn, // endColumn uses the correct index\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n    RangeComparison[RangeComparison[\"Outside\"] = 5] = \"Outside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character <= to.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character >= to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else if (endInside) {\n        return RangeComparison.OverlapFront;\n    }\n    else {\n        return RangeComparison.Outside;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp, isWhitespace } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !isWhitespace(terminalRegex(terminalRule));\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\n/**\n * This function is used at development time (for code generation and the internal type system) to get the type of the AST node produced by the given rule.\n * For data type rules, the name of the rule is returned,\n * e.g. \"INT_value returns number: MY_INT;\" returns \"INT_value\".\n * @param rule the given rule\n * @returns the name of the AST node type of the rule\n */\nexport function getRuleTypeName(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\n/**\n * This function is used at runtime to get the actual type of the values produced by the given rule at runtime.\n * For data type rules, the name of the declared return type of the rule is returned (if any),\n * e.g. \"INT_value returns number: MY_INT;\" returns \"number\".\n * @param rule the given rule\n * @returns the name of the type of the produced values of the rule at runtime\n */\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * A set of all characters that are considered whitespace by the '\\s' RegExp character class.\n * Taken from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions/Character_classes).\n */\nexport const whitespaceCharacters = ('\\f\\n\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007' +\n    '\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff').split('');\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return whitespaceCharacters.some((ws) => regexp.test(ws));\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false, iterator: other[Symbol.iterator]() }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = state.iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        return new StreamImpl(() => ({ set: new Set(), internalState: this.startFn() }), state => {\n            let result;\n            do {\n                result = this.nextFn(state.internalState);\n                if (!result.done) {\n                    const value = by ? by(result.value) : result.value;\n                    if (!state.set.has(value)) {\n                        state.set.add(value);\n                        return result;\n                    }\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map"],"names":["cc","char","charCodeAt","insertToSet","item","set","Array","isArray","forEach","subItem","push","addFlag","flagObj","flagKey","ASSERT_EXISTS","obj","undefined","Error","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","i","wordCharCodes","concat","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","constructor","this","idx","input","groupIdx","saveState","restoreState","newState","pattern","consumeChar","value","disjunction","flags","type","loc","begin","end","length","global","ignoreCase","multiLine","unicode","sticky","isRegExpFlag","popChar","substring","alts","alternative","peekChar","terms","isTerm","term","isAssertion","assertion","atom","quantifier","isBacktracking","range","atLeast","atMost","Infinity","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","group","isPatternCharacter","patternCharacter","isQuantifier","complement","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","test","toUpperCase","parseHexDigits","classPatternCharacterAtom","isClassAtom","from","classAtom","isRangeDash","to","classEscape","capturing","groupAst","number","parseInt","nextChar","howMuch","isAtom","prevState","e","howMany","hexString","hexChar","BaseRegExpVisitor","visitChildren","node","key","child","hasOwnProperty","visit","subChild","visitPattern","visitFlags","visitDisjunction","visitAlternative","visitStartAnchor","visitEndAnchor","visitWordBoundary","visitNonWordBoundary","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","visitGroup","visitGroupBackReference","visitQuantifier","minimalGrammarModule","Grammar","LanguageMetaData","caseInsensitive","fileExtensions","languageId","minimalSharedGrammarModule","AstReflection","ast","loadGrammarFromJson","json","_a","services","shared","grammar","ServiceRegistry","register","createMinimalGrammarServices","astNode","serializer","JsonSerializer","deserialize","workspace","LangiumDocumentFactory","fromModel","parse","name","__defProp","Object","defineProperty","__name","target","configurable","Statement","Architecture","reflection","isInstance","Axis","Branch","Checkout","CherryPicking","ClassDefStatement","Commit","Curve","Edge","Entry","GitGraph","Group","Info","Item","Junction","Merge","Option","Packet","PacketBlock","Pie","PieSection","Radar","Service","Treemap","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","loadedRadarGrammar","loadedTreemapGrammar","TreemapRow","Direction","Leaf","Section","MermaidAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","container","$type","property","getTypeMetaData","properties","defaultValue","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","RadarGrammar","TreemapGrammar","InfoLanguageMetaData","mode","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","RadarLanguageMetaData","TreemapLanguageMetaData","MermaidGeneratedSharedModule","InfoGeneratedModule","parser","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","RadarGeneratedModule","TreemapGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runConverter","rule","cstNode","runCommonConverter","runCustomConverter","super","_cstNode","regex","match","exec","trim","replace","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","Set","buildKeywordTokens","rules","terminalTokens","options","tokenTypes","tokenType","has","PATTERN","RegExp","toString","GitGraphTokenBuilder","GitGraphModule","TokenBuilder","ValueConverter","createGitGraphServices","context","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule","createArchitectureServices","PacketTokenBuilder","PacketModule","createPacketServices","InfoTokenBuilder","InfoModule","createInfoServices","RadarTokenBuilder","RadarModule","createRadarServices","PieTokenBuilder","PieValueConverter","PieModule","createPieServices","TreemapTokenBuilder","classDefRegex","TreemapValueConverter","parseFloat","className","styleText","registerValidationChecks","validator","validation","TreemapValidator","registry","ValidationRegistry","checks","checkSingleRoot","bind","doc","accept","rootNodeIndentation","row","TreemapRows","indent","TreemapModule","createTreemapServices","parsers","initializers","info","async","createInfoServices2","LangiumParser","packet","createPacketServices2","pie","createPieServices2","architecture","createArchitectureServices2","gitGraph","createGitGraphServices2","radar","createRadarServices2","treemap","createTreemapServices2","diagramType","text","initializer","result","lexerErrors","parserErrors","MermaidParseError","map","err","message","join","toFastProperties","toBecomeFast","FakeConstructor","prototype","fakeInstance","fakeAccess","bar","array","start","index","n","guard","toInteger","object","source","isArrayLike","keys","call","predicate","props","prop","path","nodeIsRegExp","isRegExp","isObjectLike","AbstractProduction","definition","_definition","visitor","prod","NonTerminal","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","isString","label","separator","terminalType","serializedTerminal","tokType","LABEL","terminalLabel","RestWalker","walk","prevRest","subProd","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","terminal","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","collection","func","nativeMax","Math","max","fromIndex","values","indexOf","isOptionalProd","alreadyVisited","getProductionDslName","first","isSequenceProd","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","firstForSequence","isBranchingProd","allAlternativesFirsts","innerProd","flatten","firstForBranching","ResyncFollowsWalker","topProd","follows","startWalking","followName","inner","occurenceInParent","fullRest","t_in_topProd_follows","TypeError","args","arguments","apply","difference","isArrayLikeObject","iteratee","comparator","includes","isCommon","valuesLength","outer","computed","valuesIndex","resIndex","PRINT_ERROR","msg","console","error","PRINT_WARNING","warn","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","firstCharOptimizedIndices","msgSuffix","addOptimizedIdxToResult","code","rangeCode","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","optimizedCharIdx","String","fromCharCode","upperChar","lowerChar","toLowerCase","handleIgnoreCase","findCode","setNode","targetCharCodes","find","codeOrRange","targetCode","CharCodeFinder","found","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","end_of_input","start_of_input","addStartOfInput","addStickyFlag","isCustomPattern","isFunction","isShortPattern","LineTerminatorOptimizedTester","len","lastIndex","c","checkLineBreaksIssues","lineTerminatorCharCodes","issue","LexerDefinitionErrorType","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","getCharCodes","charsOrCodes","numOrString","addToMapOfArrays","charCodeToOptimizedIdxMap","charCode","timer","Date","getTime","val","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","tokenTypeIdx","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","token","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","categories","searching","currTokType","CATEGORIES","newCategories","isEmpty","expandCategories","hasShortKeyProperty","hasCategoriesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignTokenDefaultProps","singleAssignCategoriesToksMap","assignCategoriesMapProp","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","defaultLexerErrorProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","fullText","startOffset","line","column","charAt","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","positionTracking","lineTerminatorsPattern","lineTerminatorCharacters","safeMode","errorMessageProvider","traceInitPerf","skipValidations","recoveryEnabled","freeze","Lexer","lexerDefinition","config","lexerDefinitionErrors","lexerDefinitionWarning","patternIdxToConfig","charCodeToPatternIdxToConfig","modes","emptyGroups","trackStartLines","trackEndLines","hasCustom","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","traceInitMaxIdent","log","traceMethod","traceInitVal","actualDefinition","hasOnlySingleMode","defaultMode","trackLines","errors","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","isUndefined","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","longerAlt","LONGER_ALT","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performRuntimeChecks","warnings","hasAnyLineBreak","allTokenTypes","concreteTokenTypes","currType","NA","terminatorCharCodes","currIssue","details","buildLineBreakIssueMessage","warningDescriptor","LINE_BREAKS","NO_LINE_BREAKS_FLAGS","performWarningRuntimeChecks","allModeNames","currModDef","currModName","validModesNames","missingResult","tokenTypesWithMissingPattern","filter","MISSING_PATTERN","valid","findMissingPatterns","invalidResult","tokenTypesWithInvalidPattern","INVALID_PATTERN","findInvalidPatterns","validTokenTypes","withRegExpPatterns","EndAnchorFinder","invalidRegex","regexpAst","endAnchorVisitor","EOI_ANCHOR_FOUND","findEndOfInputAnchor","StartAnchorFinder","startAnchorVisitor","SOI_ANCHOR_FOUND","findStartOfInputAnchor","invalidFlags","multiline","UNSUPPORTED_FLAGS_FOUND","findUnsupportedFlags","identicalPatterns","outerType","reduce","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findDuplicatePatterns","matchesEmptyString","EMPTY_MATCH_PATTERN","findEmptyMatchRegExps","validateRegExpPattern","invalidTypes","clazz","GROUP","SKIPPED","INVALID_GROUP_TYPE_FOUND","findInvalidGroupType","validModes","invalidModes","PUSH_MODE","PUSH_MODE_DOES_NOT_EXIST","findModesThatDoNotExist","canBeTested","str","testIdx","regExpArray","testTokenType","UNREACHABLE_PATTERN","findUnreachablePatterns","validatePatterns","currAnalyzeResult","tracer","defaults","useSticky","debug","action","onlyRelevantTypes","initCharCodeToOptimizedIndexMap","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","currPattern","regExpSource","escapedRegExpString","wrappedRegExp","groupName","longerAltType","acc","x","canLineTerminator","isCustom","short","pop","canBeOptimized","optimizedIdx","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","optimizedCodes","analyzeTokenTypes","allErrMessagesString","chopInput","identity","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","offset","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","clonedResult","groupKeys","currKey","currGroupValue","cloneEmptyGroups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","startLine","startColumn","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","endLine","endColumn","oldColumn","endOffset","tokenVector","tokenToAdd","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GAstVisitor","nodeAny","visitNonTerminal","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ref","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","setter","accumulator","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","alternatives","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","size","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","identifyProductionForDuplicates","getExtraProductionArgument","OccurrenceValidationCollector","allProductions","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","flatMap","currRefRule","firstProd","currSubDef","isFirstOptional","hasMore","rest","OrCollector","alternations","RepetitionCollector","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","currRuleName","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","validateAmbiguousAlternationAlternatives","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","orCollector","ors","currOr","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateEmptyOrAlternative","globalMaxLookahead","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","prefix","other","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","checkPrefixAlternativesAmbiguities","topLevelRules","collectorVisitor","allRuleProductions","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","laFuncBuilder","buildLookaheadFuncForOr","buildLookaheadForOptional","lookaheadBuilder","buildLookaheadFuncForOptionalProd","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","reset","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","NAME","defineNameProp","nameValue","enumerable","writable","defaultVisit","ctx","param","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","children","CstVisitorDefinitionError","RECORDING_NULL_OBJECT","description","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","derivedCtor","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","actualOptions","topRulesTable","topLevels","refResolver","definitionErrors","validationErrors","tokensMap","duplicateErrors","productionGroups","duplicates","currGroup","currDuplicates","defError","DUPLICATE_PRODUCTIONS","parameter","validateDuplicateProductions","termsNamespaceConflictErrors","tokenNames","currToken","CONFLICT_TOKENS_RULES_NAMESPACE","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","TOO_MANY_ALTS","validateTooManyAlts","duplicateRulesError","allRules","occurrences","DUPLICATE_RULE_NAME","validateRuleDoesNotAlreadyExist","lookaheadValidationErrors","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","assign","CUSTOM_LOOKAHEAD_VALIDATION","validateLookahead","allFollows","topProductions","reSyncFollows","currRefsFollow","computeAllProdsFollows","resyncFollows","_b","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","lookAheadFuncsCache","Map","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","get","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","location","fullRuleName","create","ruleCstNode","prevToken","consumedToken","rootCst","tokenTypeName","ruleCstResult","preCstNode","ruleResult","addNoneTerminalToCst","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","ruleNames","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","missingRuleNames","MISSING_METHOD","methodName","validateMissingCstMethods","errorMessages","currDefError","_RULE_NAMES","createBaseSemanticVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","baseConstructor","withDefaultsProto","createBaseVisitorConstructorWithDefaults","tokVector","tokVectorLength","newInput","soughtIdx","resetLexerState","moveToTerminatedState","getLexerPosition","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","INVALID_RULE_OVERRIDE","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","topRules","_errors","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","userTraceInitPerf","traceIsNumber","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EmbeddedActionsParser","configClone","buildATNKey","ATN_BASIC","ATN_PLUS_BLOCK_START","ATN_STAR_BLOCK_START","ATN_RULE_STOP","ATN_BLOCK_END","ATN_STAR_LOOP_BACK","ATN_STAR_LOOP_ENTRY","ATN_PLUS_LOOP_BACK","ATN_LOOP_END","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","atn","production","tokenRef","currentRule","nonTerminal","ruleToStartState","left","right","addTransition","ruleRef","defineDecisionState","makeAlts","optional","handle","epsilon","decisionMap","block","starState","star","repetitionSep","plusState","plus","repetitionMandatorySep","handles","altsLength","transition","transitions","isRuleTransition","ruleTransition","next","removeState","makeBlock","sep","blkStart","blkEnd","loop","loopback","entry","loopEnd","state","decisionStates","decision","buildRuleHandle","stop","ruleToStopState","a","b","partial","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","states","splice","DFA_ERROR","ATNConfigSet","configs","finalize","add","getATNConfigKey","elements","stack","createDFACache","startState","predicateSet","existing","atnStartState","PredicateSet","is","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","ruleLength","createRuleStartAndStopATNStates","ruleBlock","createATN","dfas","decisionLength","decisionToDFA","initATNSimulator","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","g","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","atnState","numberOfTransitions","closure","computeStartState","performLookahead","s0","previousD","d","edges","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","lookahead","reach","intermediate","skippedStopStates","transitionLength","getReachableTarget","hasConfigInRuleStopState","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","allConfigsInRuleStopStates","altSets","configToAlts","getConflictingAltSets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConflictTerminatingPrediction","min","reportLookaheadAmbiguity","buildAmbiguityError","current","nextTransitions","actualToken","possibleTokenTypes","tokenPath","mapKey","p","atnStack","getEpsilonTarget","DocumentUri","URI","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","Is","MIN_VALUE","MAX_VALUE","character","Number","candidate","objectLiteral","one","two","three","four","uri","string","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","Comment","Imports","Region","startCharacter","endCharacter","kind","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","boolean","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","version","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","asIs","adjustIndentation","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","Boolean","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","diagnostics","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","parent","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","Type","Parameter","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","mergeSort","compare","slice","leftIdx","rightIdx","ret","content","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","rootNode","buildRootNode","RootCstNodeImpl","root","buildCompositeNode","feature","compositeNode","CompositeCstNodeImpl","grammarSource","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","addHiddenNodes","nodes","added","unshift","construct","$cstNode","AbstractCstNode","hidden","_astNode","element","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","count","_text","DatatypeSymbol","Symbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","_unorderedGroups","lexer","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","callback","wrapOption","wrapMany","wrapAtLeastOne","getRule","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","computeRuleType","ruleMethod","DEFINE_RULE","startImplementation","mainRule","fragment","explicit","lexerResult","clear","lexerReport","report","createNode","extractHiddenTokens","hiddenTokens","wrapConsume","isValidToken","assignment","isCrossRef","getAssignment","convertedValue","convert","operator","subruleResult","wrapSubrule","performSubruleAssignment","newItem","assignWithoutOverride","buildReference","existingValue","entries","newValue","targetCstNode","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","lastIndexOf","defaultConfig","useDefaultLookahead","createParser","parserContext","reachable","parserRules","stream","buildElement","buildRules","ignoreGuard","method","keyword","buildKeyword","actionType","buildAction","buildCrossReference","ruleCall","namedArgs","buildPredicate","ruleArgs","ruleTarget","buildRuleCallPredicate","getToken","$refText","buildRuleCall","methods","predicatedMethod","getGuardCondition","buildAlternatives","orIdx","idFunc","lParser","wrapped","wrap","groupState","trackedAlternatives","delete","buildUnorderedGroup","buildGroup","cardinality","condition","true","guardCondition","crossRef","terminalRule","assignTerminal","$container","getRuleName","lastTick","isOperationCancelled","interruptAndCheck","CancellationToken","None","performance","now","Promise","resolve","setImmediate","setTimeout","isCancellationRequested","promise","reject","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","isAtLineStart","textOffset","getWellformedEdit","spans","substr","DocumentState","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","TextDocuments","fileSystemProvider","FileSystemProvider","fromUri","cancellationToken","readFile","createAsync","fromTextDocument","fromString","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","$document","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","all","addDocument","uriString","getDocument","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","unlink","Changed","precomputedScopes","deleteDocument","ref_resolving","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","reference","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","getAstNodePath","$nodeDescription","nodeDescription","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","UriUtils","ValidationCategory","DocumentValidator","basename","dirname","extname","joinPath","resolvePath","equals","relative","fromPath","toPath","fromParts","split","toParts","repeat","normalize","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","nodeElem","nameNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","sourceUri","sourcePath","segment","local","MultiMap","sum","addAll","callbackfn","iterator","flat","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exports","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","dispose","throwIfDisposed","SimpleCache","cache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onBuildPhase","onUpdate","_changed","deleted","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","s","nonNullable","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","serializeOptions","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserializeOptions","linkNode","sourceText","textRegions","comments","uriConverter","_c","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","startsWith","propertyAssignments","containerProperty","containerIndex","propertyName","reviveReference","mutable","$containerProperty","$containerIndex","getRefNode","fragmentIndex","DefaultServiceRegistry","fileExtensionMap","languageIdMap","ext","singleton","hasServices","diagnosticData","entriesBefore","entriesAfter","checksRecord","thisObj","category","callbacks","wrapValidationException","addEntry","handleException","functionality","messageContext","getAllSubTypes","getChecks","registerBeforeDocument","checkBefore","wrapPreparationException","registerAfterDocument","checkAfter","checksBefore","checksAfter","DefaultDocumentValidator","validationRegistry","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","some","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","_options","lexerDiagnostics","lexerDiagnostic","diagnostic","toDiagnosticSeverity","toDiagnosticData","getSource","parserError","linkingError","containerType","toDiagnostic","validationItems","acceptor","validateAstBefore","validateAstNodes","validateAstAfter","getDiagnosticRange","LexingWarning","LexingInfo","LexingHint","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","previousValue","currentValue","propertyIndex","arrayIndex","Disposable","DefaultConfigurationProvider","_ready","settings","workspaceConfig","onConfigurationSectionUpdateEmitter","Emitter","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","fire","getConfiguration","sectionName","onConfigurationSectionUpdate","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","documentPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deletedUri","remove","changedUri","newDocument","allChangedUris","toSet","shouldRelink","rebuildDocuments","sortDocuments","Linked","toArray","listener","hasTextDocument","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyDocumentPhase","targetStateDocs","notifyBuildPhase","onDocumentPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","onCancellationRequested","listenersCopy","getBuildOptions","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","workspaceFolders","folders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","readDirectory","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexerErrorMessageProvider","DEFAULT_TOKENIZE_OPTIONS","DefaultLexer","LexerErrorMessageProvider","tokenBuilder","buildTokens","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","chevrotainResult","flushLexingReport","isIMultiModeLexerDefinition","res","isTokenTypeArray","getLines","tagRegex","inlineTagRegex","buildInlineTokens","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","skipWhitespace","lastCharacter","parseJSDocElement","parseJSDocTag","parseJSDocText","JSDocLineImpl","inlines","appendEmptyLine","firstToken","lastToken","lines","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOptions","normalizeOption","escaped","JSDocCommentImpl","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","renderInlineTag","marker","JSDocDocumentationProvider","getDocumentation","normalizedOptions","isJSDoc","firstRegex","lastRegex","opts","currentLine","currentCharacter","tagMatch","fullMatch","inlineTagMatches","matchAll","startPosition","parseJSDocComment","parseJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","with","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","multilineCommentRules","DefaultAsyncParser","syncParser","_cancelToken","DefaultWorkspaceLock","previousTokenSource","CancellationTokenSource","writeQueue","readQueue","done","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","cancel","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateLexerReport","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","createDefaultCoreModule","DocumentationProvider","nameRegexp","createGrammarConfig","prepareLangiumParser","createLangiumParser","CompletionParser","createCompletionParser","References","Hydrator","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","_","ownKeys","__requested__","cause","value2","value1","AbstractRule","AbstractType","Condition","TypeDefinition","ValueLiteral","AbstractElement","isAbstractElement","ArrayLiteral","ArrayType","BooleanLiteral","isBooleanLiteral","Conjunction","isConjunction","Disjunction","isDisjunction","GrammarImport","InferredType","isInferredType","isInterface","NamedArgument","Negation","isNegation","NumberLiteral","ParameterReference","isParameterReference","ParserRule","isParserRule","ReferenceType","ReturnType","isReturnType","SimpleType","isSimpleType","StringLiteral","TerminalRule","isTerminalRule","isType","TypeAttribute","UnionType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","isCharacterRange","CrossReference","isCrossReference","EndOfFile","isEndOfFile","isGroup","isKeyword","NegatedToken","isNegatedToken","RegexToken","isRegexToken","RuleCall","isRuleCall","TerminalAlternatives","isTerminalAlternatives","TerminalGroup","isTerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","isUntilToken","Wildcard","isWildcard","LangiumGrammarAstReflection","DefaultTokenBuilder","reachableRules","buildTerminalTokens","terminalToken","popDiagnostics","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","distinct","sort","buildKeywordToken","keywordPattern","buildKeywordPattern","findLongerAlt","longerAlts","DefaultValueConverter","convertInt","convertString","convertID","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","isAstNode","isReference","isAstNodeDescription","isLinkingError","AbstractAstReflection","subtypes","allSubtypes","nested","allTypes","types","possibleSubType","isCompositeCstNode","isLeafCstNode","isRootCstNode","linkContentToContainer","getContainerOfType","typePredicate","findRootNode","streamContents","keyIndex","isAstNodeInRange","streamAllContents","streamAst","includeRoot","nodeRange","streamReferences","assignMandatoryProperties","typeMetaData","genericNode","copyDefaultValue","propertyType","RangeComparison","streamCst","isChildNode","tokenToRange","toDocumentSegment","inRange","comparison","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","Outside","compareRange","DefaultNameRegexp","findCommentNode","commentNames","getPreviousNode","isCommentNode","findIndex","ErrorWithLocation","assertUnreachable","getAllReachableRules","allTerminals","entryRule","getEntryRule","topMostRules","getHiddenRules","ruleDfs","visitedSet","refRule","getCrossReferenceTerminal","nameAssigment","findNameAssignment","isCommentTerminal","terminalRegex","findNodesForProperty","findNodesForPropertyInternal","findNodeForProperty","nodeFeature","findNodeForKeyword","treeIterator","keywordNodes","childNode","prune","findNodesForKeywordInternal","findAssignment","startNode","findNameAssignmentInternal","go","refType","childAssignment","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","getActionType","getRuleType","u","abstractElementToRegex","flagText","WILDCARD","withCardinality","keywordToRegex","until","negate","lastSlash","regexFlags","NEWLINE_REGEXP","regexpParser","TerminalRegExpVisitor","isStarting","endRegexpStack","endRegex","startRegexp","escapedChar","escapeRegExp","isMultilineComment","regexp","whitespaceCharacters","isWhitespace","ws","getCaseInsensitivePattern","partialMatches","re","process","tmp","appendRaw","nbChars","appendOptional","partialRegExp","StreamImpl","startFn","nextFn","toMap","keyFn","valueFn","entryStream","firstDone","DONE_RESULT","addSeparator","searchElement","initialValue","reduceRight","recursiveReduce","mapped","isIterable","depth","head","tail","skipCount","limit","maxSize","by","internalState","exclude","otherKeySet","ownKey","EMPTY_STREAM","collections","collIndex","arrIndex","TreeStreamImpl","iterators","pruned","Reduction","product","EmptyFileSystemProvider","EmptyFileSystem","customizer","objValue","paths","objectProto","sources","propsIndex","propsLength","findIndexFunc","iterable","reWhitespace","reTrimStart","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isSymbol","valueOf","isBinary","remainder","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","nextTick","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","ral_1","events_1","Cancelled","shortcutEvent","default","MutableToken","_isCancelled","_emitter","_token","_disposable","CallbackList","bucket","_callbacks","_contexts","foundCallbackWithDifferentContext","invoke","contexts","_event","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","stringArray","elem","_ral","RAL","install","ral","LIB","r","o","h","isAbsolute","f","l","_makeLong","format","base","delimiter","win32","posix","toStringTag","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","decodeURIComponent","A","w"],"sourceRoot":""}