"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[8126,7657],{88126:(e,t,a)=>{a.r(t),a.d(t,{IWorkspaceRouter:()=>m,IndexedDBDataConnector:()=>f,LiteLicensesClient:()=>o,LitePluginListModel:()=>l,LiteTranslatorConnector:()=>p,LiteWorkspaceManager:()=>v,THIRD_PARTY_LICENSES:()=>r});var s=a(10498),n=a(14286);const r="third-party-licenses.json",i=Object.freeze({packages:[]});class o extends s.Licenses.LicensesClient{async getBundles(){return{bundles:{...await this._getFederated(),[this.appName]:await this._getAppLicenses()}}}async download(e){const t=document.createElement("a");t.href=await this._getDownloadLink(e);const a="markdown"===e.format?"md":e.format;t.download=`jupyterlite-licenses.${a}`,document.body.appendChild(t),t.click(),document.body.removeChild(t)}get appName(){return n.PageConfig.getOption("appName")||"JupyterLite"}get appLicensesUrl(){return n.URLExt.join(n.PageConfig.getBaseUrl(),"build",r)}get labExtensionsUrl(){return n.PageConfig.getOption("fullLabextensionsUrl")}async _getDownloadLink(e){const t=await this.getBundles();let a,s;switch(e.format){case"json":default:a=JSON.stringify(t,null,2),s="application/json";break;case"markdown":a=this._formatAsMarkdown(t),s="text/markdown";break;case"csv":a=this._formatAsCSV(t),s="text/csv"}const n=new Blob([a],{type:s});return URL.createObjectURL(n)}_formatAsMarkdown(e){let t="# Third-Party Licenses\n\n";for(const[a,s]of Object.entries(e.bundles)){t+=`## ${a}\n\n`;for(const e of s.packages)t+=`### ${e.name}${e.versionInfo?` ${e.versionInfo}`:""}\n\n`,e.licenseId&&(t+=`**License ID:** ${e.licenseId}\n\n`),e.extractedText&&(t+=`\`\`\`\n${e.extractedText}\n\`\`\`\n\n`)}return t}_formatAsCSV(e){let t=`${["Bundle","Package","Version","License ID","License Text"].join(",")}\n`;for(const[a,s]of Object.entries(e.bundles))for(const e of s.packages)t+=`${[this._escapeCSVField(a),this._escapeCSVField(e.name),this._escapeCSVField(e.versionInfo||""),this._escapeCSVField(e.licenseId||""),this._escapeCSVField(e.extractedText||"")].join(",")}\n`;return t}_escapeCSVField(e){return e&&(e.includes(",")||e.includes('"')||e.includes("\n"))?`"${e.replace(/"/g,'""')}"`:e}async _getAppLicenses(){let e=i;try{e=(await fetch(this.appLicensesUrl)).json()}catch(e){console.warn("Could not resolve licenses for",this.appName)}return e}async _getFederated(){const e={};let t;try{t=JSON.parse(n.PageConfig.getOption("federated_extensions"))}catch{return e}const a=[];for(const s of t)a.push(this._getOneFederated(s,e));try{await Promise.all(a)}catch(e){console.warn("Error resolving licenses",e)}return e}async _getOneFederated(e,t){try{const a=n.URLExt.join(this.labExtensionsUrl,e.name,"static",r),s=await fetch(a);t[e.name]=await s.json()}catch{console.warn("Could not resolve licenses for",e),t[e.name]=i}}}var c=a(84025);class l extends c.PluginListModel{constructor(e){super(e),this._availablePlugins=e.pluginData.availablePlugins.map((e=>{let t=e.provides?e.provides.name.split(":")[1]:void 0;return e.provides&&!t&&(t=e.provides.name),{...e,tokenLabel:t,locked:!0,enabled:!0}}))}get available(){return this._availablePlugins}async refresh(){}async enable(e){}async disable(e){}}var d=a(19690);const g="all";class p extends d.DataConnector{constructor(){super(...arguments),this._prevLocale=""}async fetch(e){var t;const a=null!==(t=null==e?void 0:e.language)&&void 0!==t?t:"";let s=a;"default"===a?s="en":""===a&&(s=g);const r=n.URLExt.join(n.PageConfig.getBaseUrl(),`api/translations/${s}.json`);try{const e=await fetch(r),t=JSON.parse(await e.text());if(this._prevLocale!==g&&s===g){const e=this._prevLocale;t.data[e].displayName=t.data[e].nativeName,"en"!==e&&(t.data.en.displayName=`${t.data.en.nativeName} (default)`)}return this._prevLocale=s,t}catch(e){return s?{data:{},message:`Language pack '${s}' not installed!`}:{data:{en:{displayName:"English",nativeName:"English"}},message:""}}}}var h=a(5406);const u="JupyterLite Storage";class f{constructor(e){this._storageName=u,this._storageDrivers=null,this._localforage=e.localforage,this._storageName=e.storageName||u,this._storageDrivers=e.storageDrivers||null,this._ready=new h.PromiseDelegate,this.initialize().catch(console.warn)}async initialize(){await this.initStorage(),this._ready.resolve(void 0)}get storage(){return this._ready.promise.then((()=>this._storage))}async initStorage(){this._storage=this.createStorage()}get defaultStorageOptions(){const e=this._storageDrivers&&this._storageDrivers.length?this._storageDrivers:null;return{version:1,name:this._storageName,...e?{driver:e}:{}}}createStorage(){return this._localforage.createInstance({description:"Offline Storage for StateDB",storeName:"statedb",...this.defaultStorageOptions})}async fetch(e){const t=await(await this.storage).getItem(e);if(!t)throw new Error(`Failed to fetch id ${e} from StateDB`);return t}async list(e=""){const t=await this.storage,a={};for(const e of await t.keys())a[e]=await t.getItem(e);return Object.keys(a).reduce(((t,s)=>(""!==e&&e!==s.split(":")[0]||(t.ids.push(s),t.values.push(a[s])),t)),{ids:[],values:[]})}async remove(e){await(await this.storage).removeItem(e)}async save(e,t){await(await this.storage).setItem(e,t)}}var w=a(37635);class v extends f{constructor(e){super({...e}),this._workspacesApiUrl=n.PageConfig.getOption("workspacesApiUrl")||n.URLExt.join(n.PageConfig.getBaseUrl(),"api/workspaces"),this.serverSettings=e.settings||w.ServerConnection.makeSettings()}async fetch(e){try{const t=await super.fetch(e);if(t)return t}catch(e){console.warn("Failed to fetch workspace from local storage:",e)}try{const t=await this._getServerWorkspaces();if(t[e])return t[e]}catch(e){console.warn("Failed to fetch workspace from server:",e)}throw new Error(`Workspace with id '${e}' not found`)}async list(){var e;let t={};try{t=await this._getServerWorkspaces()}catch(e){console.warn("Failed to fetch workspaces from server:",e)}const a=await super.list(),s={...t};for(const t of a.values)(null===(e=t.metadata)||void 0===e?void 0:e.id)&&(s[t.metadata.id]=t);return{ids:Object.keys(s),values:Object.values(s)}}async clear(){await(await this.storage).clear()}async _getServerWorkspaces(){const e=n.URLExt.join(this._workspacesApiUrl,"all.json"),t=await fetch(e);if(!t.ok)throw new Error(`Failed to fetch workspaces: ${t.status} ${t.statusText}`);return await t.json()}}const m=new h.Token("@jupyterlite/apputils:IWorkspaceRouter")}}]);
//# sourceMappingURL=8126.d89f6ac.js.map